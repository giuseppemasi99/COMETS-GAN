dataset_type: "multistock"
stock_names: [KO, PEP, NVDA, KSU]

target_feature_price: mid_price
target_feature_volume: volume

encoder_length: 390
decoder_length: 150


data:
  _target_: thesis_gan.data.datamodule.MyDataModule

  dataset_type: ${nn.dataset_type}

  data_pipeline_price:
    _target_: thesis_gan.data.pipeline.LogReturnPipeline
    scaler:
      _target_: sklearn.preprocessing.StandardScaler

  data_pipeline_volume:
    _target_: thesis_gan.data.pipeline.ScalerPipeline
    scaler:
      _target_: sklearn.preprocessing.MinMaxScaler
      feature_range: ${as_tuple:-1,1} #[-1, 1]
    round: True
    log: True

  datasets:
    train:
      _target_: thesis_gan.data.dataset_train.StockDatasetTrain
      path: ${oc.env:PROJECT_ROOT}/data/ohlc_KO_PEP_NVDA_KSU_train.csv
      # path: ${oc.env:PROJECT_ROOT}/data/ohlc_DowJones/ohlc_DowJones_train.csv
      target_feature_price: ${nn.target_feature_price}
      target_feature_volume: ${nn.target_feature_volume}
      stock_names: ${nn.stock_names}
      encoder_length: 390
      decoder_length: 150
      stride: 1

    val:
      - _target_: thesis_gan.data.dataset_inference.StockDatasetInference
        path: ${oc.env:PROJECT_ROOT}/data/ohlc_KO_PEP_NVDA_KSU_val.csv
        # path: ${oc.env:PROJECT_ROOT}/data/ohlc_DowJones/ohlc_DowJones_val.csv
        target_feature_price: ${nn.target_feature_price}
        target_feature_volume: ${nn.target_feature_volume}
        stock_names: ${nn.stock_names}
        encoder_length: 390
        decoder_length: 150
        stride:

    test:
      - _target_: thesis_gan.data.dataset_inference.StockDatasetInference
        path: ${oc.env:PROJECT_ROOT}/data/ohlc_KO_PEP_NVDA_KSU_test.csv
        # path: ${oc.env:PROJECT_ROOT}/data/ohlc_DowJones/ohlc_DowJones_test.csv
        target_feature_price: ${nn.target_feature_price}
        target_feature_volume: ${nn.target_feature_volume}
        stock_names: ${nn.stock_names}
        encoder_length: 390
        decoder_length: 150
        stride:

  gpus: ${train.trainer.gpus}

  num_workers:
    train: 12
    val: 12
    test: 12

  batch_size:
    train: 128
    val: 1
    test: 1

module:
  _target_: thesis_gan.pl_modules.timegan_pl_module.MyLightningModule

  dataset_type: ${nn.dataset_type}
  step_to_skip: 0

  optimizer_embedder:
    _target_: torch.optim.Adam
    lr: 0.0035

  optimizer_recoverer:
    _target_: torch.optim.Adam
    lr: 0.01

  embedder:
    _target_: thesis_gan.modules.timegan.embedder
    dropout: 0
    hidden_dim: 128

  recoverer:
    _target_: thesis_gan.modules.timegan.recoverer
    hidden_dim: 128

  target_feature_price: ${nn.target_feature_price}
  target_feature_volume: ${nn.target_feature_volume}
  stock_names: ${nn.stock_names}
  encoder_length: ${nn.encoder_length}
  decoder_length: ${nn.decoder_length}
  val_log_freq: 5
  save_reals: True
